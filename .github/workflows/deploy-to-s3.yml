name: Deploy to S3
on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      #--> ATTENTION : NE TOUCHEZ PAS A CE STEP
      - name: Insert commit ID into HTML
        run: |
          sed -i "s/data-commit-id=\".*\"/data-commit-id=\"${{ github.sha }}\"/g" index.html
          # Vérifier que le remplacement a été effectué correctement
          grep -q "data-commit-id=\"${{ github.sha }}\"" index.html && echo "ID du commit inséré avec succès." || { echo "Erreur : ID du commit non inséré."; exit 1; }
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}

      - name: Install AWS CLI 2
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          sudo pip3 install awscli
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region eu-west-3
      - name: Check if bucket exists
        run: | # | ou ./fichier
          if aws s3api head-bucket --bucket $AWS_BUCKET_NAME; then 
            echo "Bucket exists."
          else
            echo "Bucket does not exist. Stopping the pipeline."
            exit 1
          fi
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }} #le script précédent nous y force
      - name: Deploy to AWS S3
        if: success() # utilisée pour s'assurer que le déploiement vers AWS S3 ne se produit que si toutes les étapes précédentes du workflow se sont terminées avec succès. Cela permet d'éviter de déployer des modifications potentiellement invalides ou incomplètes.
        run: |
          ls -la
          aws s3 sync . s3://${{ secrets.AWS_BUCKET_NAME }} --delete --exclude ".git/*" --exclude ".github/*"
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
